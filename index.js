// 1Ô∏è‚É£. Seleccionar los elementos HTML que vamos a utilizar:
// - Imagen de los pokemon
// - Stats de cada uno
// ü§ì Pista: revisa el m√©todo document.querySelector()

// Selectores para el Pokemon 1
const pokemon1Img = document.querySelector('.pokemon-1__img');
const pokemon1HP = document.querySelector('.pokemon-1__hp');
const pokemon1Name = document.querySelector('.pokemon-1__name');
const pokemon1Attack = document.querySelector('.pokemon-1__attack');
const pokemon1Defense = document.querySelector('.pokemon-1__defense');
const pokemon1Type = document.querySelector('.pokemon-1__type');

// Selectores para el Pokemon 2
const pokemon2Img = document.querySelector('.pokemon-2__img');
const pokemon2HP = document.querySelector('.pokemon-2__hp');
const pokemon2Name = document.querySelector('.pokemon-2__name');
const pokemon2Attack = document.querySelector('.pokemon-2__attack');
const pokemon2Defense = document.querySelector('.pokemon-2__defense');
const pokemon2Type = document.querySelector('.pokemon-2__type');

// 2Ô∏è‚É£. Miremos ahora la API de Pokemon :)
// - Haz un llamado a la URL https://pokeapi.co/api/v2/pokemon/ y analiza c√≥mo devuelve su respuesta
// La API retorna un pokemon https://pokeapi.co/api/v2/pokemon/{ID} si se provee un ID al final.
// ü§ì Pista: Para enfrentar 2 pokemones aleatores, necesitamos hacer 2 llamados a la API con 2 n¬¥¬®√∫meros aleatorios entre el 1 y el 900


// 3Ô∏è‚É£ - Crear una funci√≥n que genere un n√∫mero random entre 1 y 900.
// Puedes usar esta: üë©üèª‚Äçüíª
const getRandomNumber = (numMin, numMax) => {
  return Math.floor(Math.random() * (numMax - numMin + 1) + numMin);
};

// 4Ô∏è‚É£ - Asignar un n√∫mero random al ID de los que ser√°n nuestros pokemons
// Declara 2 variables para cada pokemon y guarda los n√∫meros que retorna la funci√≥n en ellos
const poke1ID = getRandomNumber(1, 900);
const poke2ID = getRandomNumber(1, 900);

// 5Ô∏è‚É£ - Crear una funci√≥n para traer (fetch) data de la API
// Dale una mirada a la funci√≥n fetch -> https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API
// Recuerda la URL de la API https://pokeapi.co/api/v2/pokemon/${pokeID}
const getPokemon = async (pokeID) => {
  const response = await fetch(`https://pokeapi.co/api/v2/pokemon/${pokeID}`);
  const data = await response.json();
  return data;
};

// 6Ô∏è‚É£ - Vamos a crear los pokemons en la funci√≥n createPokemons.
// Primero Haz varias pruebas a las API para examinar bien qu√© devuelve, esa data
// ser√° necesaria para popular nuestros elementos HTML
// ü§ì Pista: - Crea una funci√≥n as√≠ncrona que reciba los 2 ID de los pokemon, es decir los n√∫meros que obtenemos de llamar la funci√≥n random
//           - Haz una llamada a la API por cada pokemon, guarda los datos que te devuelve en dos variables: pokemon1 y pokemon2
//           - Toma los elementos HTML que seleccionamos m√°s arriba y utiliza su propiedad innerHTML para a√±adir la info que necesitamos de la API
const createPokemons = async (id1, id2) => {
  // Llamadas a la API para obtener datos de los Pok√©mon
  const pokemon1Data = await getPokemon(id1);
  const pokemon2Data = await getPokemon(id2);

  // Poblar los elementos HTML con los datos obtenidos de la API
  pokemon1Img.src = pokemon1Data.sprites.front_default;
  pokemon1HP.textContent = pokemon1Data.stats[0].base_stat;
  pokemon1Name.textContent = pokemon1Data.name;
  pokemon1Attack.textContent = pokemon1Data.stats[1].base_stat;
  pokemon1Defense.textContent = pokemon1Data.stats[2].base_stat;
  pokemon1Type.textContent = pokemon1Data.types[0].type.name;

  pokemon2Img.src = pokemon2Data.sprites.front_default;
  pokemon2HP.textContent = pokemon2Data.stats[0].base_stat;
  pokemon2Name.textContent = pokemon2Data.name;
  pokemon2Attack.textContent = pokemon2Data.stats[1].base_stat;
  pokemon2Defense.textContent = pokemon2Data.stats[2].base_stat;
  pokemon2Type.textContent = pokemon2Data.types[0].type.name;
};

// 7Ô∏è‚É£ - Vamos a practicar eventos en JS, de esta manera vamos a poder controlar cu√°ndo traer pokemons desde la interfaz
// Nuestra funci√≥n fetch va a traer pokemons cada que el c√≥digo es ejecutado, es decir cuando la p√°gina se recarga
// Vamos a a√±adir un bot√≥n que recargue la p√°gina en cada click, as√≠ podemos obtener nuevos pokemons random cada vez.
// ü§ì Pista: - Seleccionar el elmento HTML del bot√≥n
//           - Llamar a la funci√≥n createPokemons solo cuando se d√© click a ese bot√≥n (lee sobre eventListeners https://www.w3schools.com/js/js_htmldom_eventlistener.asp )
// üïµüèª‚Äç‚ôÄÔ∏è En nuestra app tenemos 3 botones. El de Catch!, Fight! y el que OK! que aparece en el modal cuando pelean los pokemons
// Cada bot√≥n tendr√° atado un eventListener que vamos a construir juntos ‚ù§Ô∏è
